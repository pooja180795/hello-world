import numpy as np
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

# Define the XOR input data and corresponding labels
X_train = np.array([[0, 0], [0, 1], [1, 0], [1, 1]])
y_train = np.array([0, 1, 1, 0])
a = np.array([[0, 0], [0, 0], [0, 0], [0, 0]])

# Build a simple neural network
model = Sequential([
    Dense(4, input_shape=(2,), activation='relu'),  # Hidden layer with 4 neurons
    Dense(1, activation='sigmoid')  # Output layer with 1 neuron and sigmoid activation for binary classification
])

# Compile the model
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Train the model
model.fit(X_train, y_train, epochs=1000, verbose=1)

# Evaluate the model
loss, accuracy = model.evaluate(X_train, y_train)
print(f'Test loss: {loss:.4f}')
print(f'Test accuracy: {accuracy:.4f}')

# Make predictions
predictions = model.predict(a)
rounded_predictions = np.round(predictions)
print("Predictions:")
print(rounded_predictions)
